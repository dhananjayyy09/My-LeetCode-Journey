class DisjointSet {
public:
    vector<int> par, size;
    DisjointSet(int n) {
        par.resize(n + 1, 0);
        size.resize(n + 1, 0);
        for (int i = 0; i < n; i++) {
            par[i] = i;
        }
    }

    int findPar( int node) {
        if (node == par[node])
            return node;
        return par[node] = findPar(par[node]);
    }

    void unionBySize(int u, int v){
        int ult_u = findPar(u);
        int ult_v = findPar(v);
        if(ult_u == ult_v) return;
        if(size[ult_u] < size[ult_v]){
            par[ult_u] = par[ult_v];
            size[ult_v] += size[ult_u];
        } 
        else{
            par[ult_v] = par[ult_u];
            size[ult_u] += size[ult_v];
        }
    }
};
