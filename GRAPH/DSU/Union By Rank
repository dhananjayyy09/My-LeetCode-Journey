class DisjointSet {
public:
    vector<int> rank, par;
    DisjointSet(int n) {
        rank.resize(n + 1, 0);
        par.resize(n + 1, 0);
        for (int i = 0; i < n; i++) {
            par[i] = i;
        }
    }

    int findPar( int node) {
        if (node == par[node])
            return node;
        return par[node] = findPar(par[node]);
    }

    void unionSet(int u, int v) {
        int ult_u = findPar(u);
        int ult_v = findPar(v);
        if (ult_u == ult_v)
            return;

        if (rank[ult_u] > rank[ult_v]) {
            par[ult_v] = ult_u;
        } else if (rank[ult_u] < rank[ult_v]) {
            par[ult_u] = ult_v;
        } else {
            par[ult_u] = ult_v;
            rank[ult_v]++;
        }
    }
};
