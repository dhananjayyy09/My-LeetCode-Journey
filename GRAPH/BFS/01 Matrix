class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int m = mat.size(), n = mat[0].size();
        queue<pair<int, int>> q;
        vector<vector<int>> dis(m, vector<int>(n, 1e9));
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(mat[i][j] == 0){
                    dis[i][j] = 0;
                    q.push({i, j});
                }
            }
        }

        vector<pair<int, int>> dir = {{0,1}, {0,-1}, {1,0}, {-1, 0}};
        while(!q.empty()){
            int x = q.front().first, y = q.front().second;
            q.pop();

            for(auto[dx, dy] : dir){
                int nr = x + dx, nc = y + dy;
                if(nr >= 0 && nr < m && nc >= 0 && nc < n){
                    if(dis[nr][nc] > dis[x][y] + 1){
                        dis[nr][nc] = dis[x][y] + 1;
                        q.push({nr, nc});
                    }
                }
            }
        }
        return dis;
    }
};
