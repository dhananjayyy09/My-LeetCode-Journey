class Solution {
public:
    void dfs(vector<vector<int>> &stones, int idx, vector<bool> &visited){
        int n = stones.size();
        visited[idx] = true;

        for(int i=0; i<n; i++){
            int r = stones[idx][0];
            int c = stones[idx][1];
            if(!(visited[i]) && (stones[i][0] == r || stones[i][1] == c)){
                dfs(stones, i, visited);
            }
        }
    }

    int removeStones(vector<vector<int>>& stones) {
        int group = 0;
        int n = stones.size();
        vector<bool> visited(n, false);
        for(int i=0; i<n; i++){
            if(visited[i]) continue; //skip
            dfs(stones, i, visited);
            group++;
        }

        return n-group;
    }
};
