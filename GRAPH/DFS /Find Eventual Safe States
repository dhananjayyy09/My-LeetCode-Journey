class Solution {
public:
    bool dfs(int node, vector<int> &state, vector<vector<int>>& graph){
        if(state[node] != 0){
            return state[node] == 2; 
        }        
        state[node] = 1;
        for(auto it : graph[node]){
            if(!dfs(it, state, graph)) return false;
        }
        state[node] = 2;
        return true;
    }
    vector<int> eventualSafeNodes(vector<vector<int>>& graph) {
        int n = graph.size();
        vector<int> ans;
        vector<int> state(n, 0);

        for(int i=0; i<n; i++){
            if(dfs(i, state, graph)){
                ans.push_back(i);
            }
        }
        return ans;
    }
};
