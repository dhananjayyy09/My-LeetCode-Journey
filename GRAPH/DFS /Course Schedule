class Solution {
public:
    bool dfs(int node, vector<vector<int>> &adj, vector<bool> &visited,vector<bool> &recstac){
        visited[node] = true;
        recstac[node] = true;
        for(auto it : adj[node]){
            if(!visited[it]){
                if(dfs(it,adj,visited,recstac))
                return true;
            }
            else if(recstac[it])
            return true;
        }
        recstac[node] =false;
        return false;
    }

    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        int n = numCourses;
        vector<vector<int>>adj(n);
        for(auto pre : prerequisites){
            adj[pre[1]].push_back(pre[0]);
        }

        vector<bool>visited(n,false);
        vector<bool>recstac(n,false);
        for(int i=0;i<n;i++){
            if(!visited[i]){
                if(dfs(i,adj,visited,recstac))
                return false;
            }
        }
        return true;
    }
};
