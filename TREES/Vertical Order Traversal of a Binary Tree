class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        map<int, map<int, multiset<int>>> nodes;
        queue<pair<TreeNode*, pair<int,int>>> q;
        q.push({root,{0,0}});
        
        while(!q.empty()){
            auto p = q.front();
            q.pop();
            TreeNode* curr = p.first;
            int x = p.second.first, y = p.second.second;
            nodes[x][y].insert(curr->val);
            if(curr->left){
                q.push({curr->left,{x-1, y+1}});
            } 
            if(curr->right){
                q.push({curr->right,{x+1, y+1}});
            } 
        }
        vector<vector<int>> ans;
        for(auto b : nodes){
            vector<int>col;
            for(auto a : b.second){
                col.insert(col.end(), a.second.begin(), a.second.end());
            }
            ans.push_back(col);
        }
        return ans;
    }
};
