class Solution {
public:
    vector<int>solve(TreeNode* root,int &dis,int &count){
        if(!root) return{0};
        if(!root->left && !root->right){
            return {1};
        }

        vector<int> left_d = solve(root->left, dis, count);
        vector<int> right_d = solve(root->right, dis, count);

        for(int &l : left_d){
            for(int &r : right_d){
                if(l != 0 && r != 0  && l+r <= dis){
                    count++;
                }
            }
        }

        vector<int> curr_d;
        for(int &l : left_d){
            if(l!=0 && l+1 < dis){
                curr_d.push_back(l+1);
            }
        }

        for(int &r : right_d){
            if(r!=0 && r+1 < dis){
                curr_d.push_back(r+1);
            }
        }
        return curr_d;
    }

    int countPairs(TreeNode* root, int dis) {
        int count = 0;
        solve(root,dis,count);
        return count;
    }
};
