class Solution {
public:
    TreeNode* replaceValueInTree(TreeNode* root) {
        if (!root)
            return NULL;
        queue<TreeNode*> q;
        vector<int> lsum;
        q.push(root);

        while (!q.empty()) {
            int sum = 0;
            int n = q.size();
            while (n--) {
                TreeNode* curr = q.front();
                q.pop();
                sum += curr->val;
                if (curr->left) {
                    q.push(curr->left);
                }
                if (curr->right) {
                    q.push(curr->right);
                }
            }
            lsum.push_back(sum);
        }

        q.push(root);
        root->val = 0;
        int i = 1;
        while (!q.empty()) {
            int n = q.size();
            while (n--) {
                TreeNode* curr = q.front();
                q.pop();
                int ssum = 0;
                if (curr->left) ssum += curr->left->val;
                if (curr->right) ssum += curr->right->val;

                if (curr->left) {
                    curr->left->val = lsum[i] - ssum;
                    q.push(curr->left);
                }
                if (curr->right) {
                    curr->right->val = lsum[i] - ssum;
                    q.push(curr->right);
                }
            }
            i++;
        }
        return root;
    }
};
