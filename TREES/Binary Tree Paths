class Solution {
public:
    void dfs(TreeNode* root, string path, vector<string> &res){
        if(!root) return;
        if(!path.empty()){
            path += "->";
        }
        path += to_string(root->val);

        if(!root->left && !root->right){
            res.push_back(path);
            return;
        }
        dfs(root->left, path, res);
        dfs(root->right, path, res);
    }

    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> res;
        if(!root) return res;
        dfs(root, "", res);
        return res;
    }
};
