class Solution {
public:
    //mine
    ListNode* rotateRightt(ListNode* head, int k) {
        if (!head || !head->next || k == 0)
            return head;
        int count = 0;

        while (count < k) {
            ListNode* temp1 = head;
            ListNode* temp2 = NULL;
            while (temp1->next) {
                temp2 = temp1;
                temp1 = temp1->next;
            }
            temp1->next = head;
            head = temp1;
            temp2->next = NULL;

            count++;
        }
        return head;
    }

    //gpt
    ListNode* rotateRight(ListNode* head, int k) {
        if (!head || !head->next || k == 0) return head;
        int length = 1;
        ListNode* tail = head;
        while (tail->next) {
            tail = tail->next;
            length++;
        }        
        k = k % length;
        if (k == 0) return head;

        tail->next = head;
        int stepsToNewTail = length - k;
        ListNode* newTail = head;
        for (int i = 1; i < stepsToNewTail; i++) {
            newTail = newTail->next;
        }
        ListNode* newHead = newTail->next;
        newTail->next = NULL;
        
        return newHead;
    }
};
