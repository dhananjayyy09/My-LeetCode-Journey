class Solution {
public:
//memoization
    int solve(int i, vector<int>& coins, int amt, vector<vector<int>>& dp) {
        if (amt == 0)
            return 1;
        if (i < 0)
            return 0;
        if (dp[i][amt] != -1)
            return dp[i][amt];

        int notake = solve(i - 1, coins, amt, dp);
        int take = 0;
        if (coins[i] <= amt) {
            take = solve(i, coins, amt - coins[i], dp);
        }
        return dp[i][amt] = take + notake;
    }

    int change(int amt, vector<int>& coins) {
        int n = coins.size();
        vector<vector<int>> dp(n, vector<int>(amt + 1, -1));
        return solve(n - 1, coins, amt, dp);
    }
};
