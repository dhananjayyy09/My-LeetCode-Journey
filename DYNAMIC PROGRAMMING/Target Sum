class Solution {
public:
    int findTargetSumWays(vector<int>& nums, int target) {
        int total = accumulate(nums.begin(), nums.end(), 0);

        if (total < abs(target) || (target + total) % 2 != 0)
            return 0;

        int S1 = (target + total) / 2;
        int n = nums.size();
        vector<int> dp(S1 + 1, 0);
        dp[0] = 1; 

        for (int i = 0; i < n; i++) {
            vector<int> curr(dp); 
            for (int j = 0; j <= S1; j++) {
                if (nums[i] <= j) {
                    curr[j] += dp[j - nums[i]];
                }
            }
            dp = curr;
        }
        return dp[S1];
    }
};
