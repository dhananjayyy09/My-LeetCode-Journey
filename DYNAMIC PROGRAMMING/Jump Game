class Solution {
public:
    // mine
    bool canJumpp(vector<int>& nums) {
        int n = nums.size() - 1;
        int i = 0;

        while (i <= n) {
            if (i + nums[i] >= n) {
                return true;
            }
            if (nums[i] == 0) {
                return false;
            }
            i += nums[i];
        }
        return false;
    }

    // gpt
    bool canJump(vector<int>& nums) {
        int n = nums.size();
        int farthest = 0;

        for (int i = 0; i < n; i++) {
            if (i > farthest) {
                return false;
            }
            farthest = max(farthest, i + nums[i]);
            if (farthest > n ) {
                return true;
            }
        }
        return true;
    } 
};
