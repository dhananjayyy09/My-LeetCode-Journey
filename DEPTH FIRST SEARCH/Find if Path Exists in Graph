class Solution {
public:
    bool dfs(int node,int tar,vector<vector<int>>& adj, vector<int> &visited){
        if(node == tar) return true;

        visited[node] = 1;
        for(auto it: adj[node]){
            if(!visited[it]){
                if(dfs(it,tar,adj,visited))
                return true;
            }
        }
        return false;
    }

    bool validPath(int n, vector<vector<int>>& edges, int source,int destination) {
        vector<vector<int>> adj(n);
        for (auto &edge : edges) {
            adj[edge[0]].push_back(edge[1]);
            adj[edge[1]].push_back(edge[0]);  
        }

        vector<int> visited(n, 0);
        return dfs(source,destination, adj, visited);
    }
};
