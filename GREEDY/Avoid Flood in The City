class Solution {
public:
    vector<int> avoidFlood(vector<int>& rains) {
        int n = rains.size();
        unordered_map<int, int> mp;
        set<int> dry;
        vector<int> ans(n, 1);

        for(int i=0; i<n; i++){
            int lake = rains[i];
            if(lake == 0){
                dry.insert(i);
            }
            else{
                ans[i] = -1;
                if(mp.count(lake)){
                    auto it = dry.lower_bound(mp[lake]);
                    if(it == dry.end()){ 
                        return {};
                    }
                    int day = *it;
                    ans[day] = lake;

                    dry.erase(it);
                }
                mp[lake] = i;
            }
        }
        return ans;
    }
};
