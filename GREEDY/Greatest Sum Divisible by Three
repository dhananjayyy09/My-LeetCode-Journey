class Solution {
public:
    int maxSumDivThree(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        int sum = 0;
        vector<int> r1, r2;
        for(int n : nums){
            sum += n;
            if(n % 3 == 1) r1.push_back(n);
            if(n % 3 == 2) r2.push_back(n);
        }
        if(sum % 3 == 0) return sum;

        sort(r1.begin(), r1.end());
        sort(r2.begin(), r2.end());
        int mod = sum % 3;
        int op1 = INT_MAX, op2 = INT_MAX;
        if(mod == 1){
            if(!r1.empty()) op1 = r1[0];
            if(r2.size() >= 2) op2 = r2[0] + r2[1];
        } 
        else if(mod == 2){
            if(!r2.empty()) op1 = r2[0];
            if(r1.size() >= 2) op2 = r1[0] + r1[1];
        }

        int rem = min(op1, op2);
        if(rem == INT_MAX) return 0;

        return sum - rem; 
    }
}; 
