class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        sort(intervals.begin(), intervals.end(), [](const vector<int>& a, const vector<int>& b) {
            return a[0] < b[0]; 
        });
        vector<vector<int>> ans;
        if(intervals.size() == 1){
            ans.push_back(intervals[0]);
            return ans;
        }
        int preStart = intervals[0][0];
        int preEnd = intervals[0][1];

        for(int i=1; i<intervals.size(); i++){
            if(intervals[i][0] <= preEnd){
                preEnd = max(preEnd, intervals[i][1]);
            }
            else{
                ans.push_back({preStart, preEnd});
                preStart = intervals[i][0];
                preEnd = intervals[i][1];
            }
        }
        ans.push_back({preStart, preEnd});
        return ans;
    }
};
