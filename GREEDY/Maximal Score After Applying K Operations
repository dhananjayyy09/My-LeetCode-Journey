class Solution {
public:
    // brute-force
    long long maxKelement(vector<int>& nums, int k) {
        long long score = 0;
        while(k--){
            int maxi = -1e9;
            int idx = -1;
            for(int i=0; i<nums.size(); i++){
                if(nums[i] > maxi){
                    maxi = nums[i];
                    idx = i;
                }
            }
            score += maxi;
            nums[idx] = ceil(nums[idx]/3.0);
        }
        return score;
    }

    //optimal
    long long maxKelements(vector<int>& nums, int k) {
        long long score = 0;
        priority_queue<int> pq;
        for(int val : nums){
            pq.push(val);
        }
        while(k--){
            int maxi = pq.top();
            pq.pop();
            score += maxi;
            int newVal = ceil(maxi/3.0);
            pq.push(newVal);
        }
        return score;
    }
};
